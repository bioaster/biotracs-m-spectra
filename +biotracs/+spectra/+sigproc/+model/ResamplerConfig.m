% BIOASTER
%> @file		ResamplerConfig.m
%> @class		biotracs.spectra.sigproc.model.ResamplerConfig
%> @link		http://www.bioaster.org
%> @copyright	Copyright (c) 2014, Bioaster Technology Research Institute (http://www.bioaster.org)
%> @license		BIOASTER
%> @date		2015


classdef ResamplerConfig < biotracs.core.mvc.model.ProcessConfig
    
    properties(Constant)
    end
    
    properties(SetAccess = protected)
    end
    
    % -------------------------------------------------------
    % Public methods
    % -------------------------------------------------------
    
    methods
        
        % Constructor
        function this = ResamplerConfig()
            this@biotracs.core.mvc.model.ProcessConfig();
            
            this.createParam(...
                'NbPoints', [], ...
                'Constraint', biotracs.core.constraint.IsGreaterThan(0, 'Type', 'integer', 'Strict', true), ...
                'Description', 'The required number of points. By default = int( RangeWitdh/minStep )' ...
                );
%             this.createParam(...
%                 'SamplingMultiplier', 1, ...
%                 'Constraint', biotracs.core.constraint.IsGreaterThan(0, 'Strict', true), ...
%                 'Description', 'The number of samples is multiplied by the multiplier. By default SamplingMultiplier = 1' ...
%                 );
            this.createParam(...
                'FWHM', [], ...
                'Constraint', biotracs.core.constraint.IsPositive(), ...
                'Description', 'Full width at half height' ...
            );
            this.createParam(...
                'NbPointsPerPeak', 12, ...
                'Constraint', biotracs.core.constraint.IsPositive(), ...
                'Description', 'Only used if is FWHM is provided. Number of point per peak to use for resampling. Default = 12. If NbPoints is moreover given, the algorithm will checked that it ensures at least NbPointsPerPeak' ...
                );
            this.createParam(...
                'Range', [], ...
                'Constraint', biotracs.core.constraint.IsRange(), ...
                'Description', 'Range value to resample' ...
                );
            this.createParam(...
                'ExtendRange', true, ...
                'Constraint', biotracs.core.constraint.IsBoolean(), ...
                'Description', 'Active for signal set. Extend all the ranges to fit the largest signal' ...
                );
        end
        
        
    end
    
    % -------------------------------------------------------
    % Protected methods
    % -------------------------------------------------------
    
    methods(Access = protected)
    end
    
end
